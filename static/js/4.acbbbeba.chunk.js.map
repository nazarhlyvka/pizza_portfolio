{"version":3,"sources":["components/Modal/SuccessModal.js","hooks/useInput.js","components/Modal/Form.js","components/pages/Cart/CartItem.js","components/pages/Cart/Cart.js","components/pages/Wrapper/MainWr.js","components/UI/Btn.js"],"names":["SuccessModal","successModal","useSelector","state","modal","dispatch","useDispatch","className","onClick","closeOutModal","closeSuccessModal","closeOrderSuccess","useInput","checkInput","useState","input","setInput","touched","setTouched","inputValid","inputInvalid","inputClasses","reset","Form","btnName","makeOrder","order","value","trim","name","setName","setNameTouched","nameClasses","nameValid","nameInvalid","resetName","test","phone","setPhone","setPhoneTouched","phoneClasses","phoneValid","phoneInvalid","resetPhone","formValid","onSubmit","e","preventDefault","console","log","JSON","stringify","closeOrderForm","openOrderSuccess","refreshDrinks","refreshPizza","refreshPromo","closeCallBackModal","openSuccessModal","autoComplete","id","type","onChange","target","onBlur","placeholder","maxLength","disabled","CartItem","detail","moreItem","useCallback","more","split","morePizza","lessPizza","moreDrinks","lessDrinks","morePromo","lessPromo","removeFromCart","removePizza","removeDrinks","removePromo","map","item","src","image","alt","amount","Btn","content","quantity","disable","Cart","cart","orderForm","orderSuccess","length","forEach","cartList","openOrderForm","MainWr","children"],"mappings":"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","file":"static/js/4.acbbbeba.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useDispatch } from 'react-redux'\r\nimport { closeOutModal, closeSuccessModal } from '../../store/reducers/Modal'\r\nimport { closeOrderSuccess } from '../../store/reducers/Order'\r\nimport './SuccessModal.scss'\r\n\r\nconst SuccessModal = () => {\r\n  const successModal = useSelector(state => state.modal.successModal)\r\n  const dispatch = useDispatch()\r\n\r\n  const closeSuccess = () => {\r\n    dispatch(closeOutModal())\r\n    dispatch(closeSuccessModal())\r\n    dispatch(closeOrderSuccess())\r\n  }\r\n\r\n  return(\r\n    <div className={successModal ? 'success_modal effect' : 'success_modal'}>\r\n      <p>Operator will callback for 1 minute</p>\r\n      <button className='btn' onClick={closeSuccess}>Ok</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SuccessModal","import { useState } from \"react\";\r\n\r\nconst useInput = (checkInput) => {\r\n  const [input, setInput] = useState(\"\");\r\n  const [touched, setTouched] = useState(false);\r\n\r\n  const inputValid = checkInput(input)\r\n  const inputInvalid = !inputValid && touched;\r\n\r\n  const inputClasses = inputInvalid\r\n  ? \"form-control invalid\"\r\n  : \"form-control\";\r\n\r\n  const reset = () => {\r\n    setInput('');\r\n    setTouched(false);\r\n  };\r\n  return{\r\n    input,\r\n    setInput,\r\n    setTouched,\r\n    inputClasses,\r\n    inputValid,\r\n    inputInvalid,\r\n    reset\r\n  }\r\n}\r\n\r\nexport default useInput","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport useInput from \"../../hooks/useInput\";\r\nimport { refreshDrinks } from \"../../store/reducers/Drinks\";\r\nimport { closeCallBackModal, openSuccessModal } from \"../../store/reducers/Modal\";\r\nimport { closeOrderForm, openOrderSuccess } from \"../../store/reducers/Order\";\r\nimport { refreshPizza } from \"../../store/reducers/Pizza\";\r\nimport { refreshPromo } from \"../../store/reducers/Promo\";\r\nimport \"./Form.scss\";\r\n\r\nconst Form = ({btnName, makeOrder, order}) => {\r\n  const dispatch = useDispatch();\r\n  const openSuccess = () => {\r\n    dispatch(closeCallBackModal())\r\n    dispatch(openSuccessModal())\r\n  }\r\n  const {\r\n    input: name,\r\n    setInput: setName,\r\n    setTouched: setNameTouched,\r\n    inputClasses: nameClasses,\r\n    inputValid: nameValid,\r\n    inputInvalid: nameInvalid,\r\n    reset: resetName,\r\n  } = useInput((value) => value.trim() !== \"\");\r\n\r\n  const {\r\n    input: phone,\r\n    setInput: setPhone,\r\n    setTouched: setPhoneTouched,\r\n    inputClasses: phoneClasses,\r\n    inputValid: phoneValid,\r\n    inputInvalid: phoneInvalid,\r\n    reset: resetPhone,\r\n  } = useInput((value) => /[3][8][0][0-9]{9}/.test(value));\r\n\r\n  let formValid = false;\r\n\r\n  if (nameValid && phoneValid) {\r\n    formValid = true;\r\n  }\r\n\r\n  const sendData = (e) => {\r\n    e.preventDefault();\r\n    setNameTouched(true);\r\n    setPhoneTouched(true);\r\n\r\n    if(makeOrder) {\r\n      console.log(`name: ${name},phone: ${phone}, order:${JSON.stringify(order)}`);\r\n      resetName();\r\n      resetPhone();\r\n      dispatch(closeOrderForm())\r\n      dispatch(openOrderSuccess())\r\n      dispatch(refreshDrinks())\r\n      dispatch(refreshPizza())\r\n      dispatch(refreshPromo())\r\n      return\r\n    }\r\n    console.log(name, phone)\r\n    resetName();\r\n    resetPhone();\r\n    openSuccess()\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={sendData} autoComplete=\"off\" className=\"form\">\r\n        <div className={nameClasses}>\r\n          <input\r\n            className=\"name\"\r\n            id=\"name\"\r\n            type=\"text\"\r\n            onChange={(e) => setName(e.target.value)}\r\n            onBlur={() => setNameTouched(true)}\r\n            value={name}\r\n            placeholder={nameInvalid ? \"Incorect name\" : \"Name\"}\r\n            maxLength='20'\r\n          />\r\n        </div>\r\n        <div className={phoneClasses}>\r\n          <input\r\n            className=\"phone\"\r\n            id=\"phone\"\r\n            type=\"text\"\r\n            onChange={(e) => setPhone(e.target.value)}\r\n            onBlur={() => setPhoneTouched(true)}\r\n            value={phone}\r\n            placeholder={phoneInvalid ? \"Incorect phone\" : \"Phone\"}\r\n            maxLength='12'\r\n          />\r\n        </div>\r\n        <button \r\n          className={formValid ? \"btn\" : \"btn_dis\"} \r\n          disabled={!formValid}\r\n          type='submit'>\r\n          {btnName}\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React, { useCallback } from 'react'\r\nimport Btn from '../../UI/Btn'\r\nimport { useDispatch } from 'react-redux';\r\nimport { lessPizza, morePizza, removePizza } from '../../../store/reducers/Pizza';\r\nimport { lessDrinks, moreDrinks, removeDrinks } from '../../../store/reducers/Drinks';\r\nimport { lessPromo, morePromo, removePromo } from '../../../store/reducers/Promo';\r\n\r\nconst CartItem = ({detail}) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const moreItem = useCallback((id, more) => {\r\n    switch(id.split(' ')[0]) {\r\n      case 'pizza':{\r\n        dispatch(more ? morePizza(id) : lessPizza(id))\r\n        break\r\n      }\r\n      case 'drink': {\r\n        dispatch(more ? moreDrinks(id): lessDrinks(id))\r\n        break\r\n      }\r\n      case 'promo': {\r\n        dispatch(more ? morePromo(id) : lessPromo(id))\r\n        break\r\n      }\r\n      default:\r\n        return null\r\n    }\r\n  }, [dispatch])\r\n\r\n  const removeFromCart = useCallback((id) => {\r\n    switch(id.split(' ')[0]) {\r\n      case 'pizza':{\r\n        dispatch(removePizza(id))\r\n        break\r\n      }\r\n      case 'drink': {\r\n        dispatch(removeDrinks(id))\r\n        break\r\n      }\r\n      case 'promo': {\r\n        dispatch(removePromo(id))\r\n        break\r\n      }\r\n      default:\r\n        return null\r\n    }\r\n  }, [dispatch])\r\n\r\n  return(\r\n    <>\r\n      {detail.map(item => {\r\n        return(\r\n          <li key={item.id} className='cart_item b_r10px'>\r\n            <span onClick={() => removeFromCart(item.id)} className='cart_remove_item' >&times;</span>\r\n            <h2 className='cart_item_name mb20px'>{item.name}</h2>\r\n            <div className='cart_item_content'>\r\n              <img className='content_img b_r10px' src={item.image} alt={item.name}/>\r\n              <p className='content_amount'>Price: {item.amount}$</p>\r\n              <div className='more_less'>\r\n                <div onClick={() => moreItem(item.id, true)}>\r\n                  <Btn content={<span className='fs'>+</span>}/>\r\n                </div>\r\n                <span className='content_how'>{item.quantity}</span>\r\n                {item.quantity > 1 \r\n                  ? <div onClick={() => moreItem(item.id, false)}>\r\n                      <Btn content={<span className='fs'>-</span>}/>\r\n                    </div> \r\n                  : <Btn disable={true} content={<span className='fs'>-</span>}/>}\r\n              </div>\r\n            </div>\r\n          </li>\r\n        )\r\n      })}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CartItem","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport MainWr from '../Wrapper/MainWr'\r\nimport CartItem from './CartItem'\r\nimport Form from '../../Modal/Form'\r\nimport SuccessModal from '../../Modal/SuccessModal'\r\nimport './Cart.scss'\r\nimport { openOrderForm } from '../../../store/reducers/Order'\r\n\r\nconst Cart = () => {\r\n  const {cart} = useSelector(state => state.cart)\r\n  const {orderForm, orderSuccess} = useSelector(state => state.order)\r\n  const dispatch = useDispatch()\r\n\r\n  let order = 0\r\n  let amount = 0\r\n  if(cart.length > 0) {\r\n    cart.forEach(item => amount += item.amount)\r\n    order = cart.map(item => {\r\n      return{\r\n        name: item.name,\r\n        amount: item.amount,\r\n        quantity: item.quantity,\r\n      }\r\n    })\r\n  }\r\n\r\n  const cartList = (\r\n    <>\r\n      <ul className='align_box cart_list'>\r\n        <CartItem detail={cart}/>\r\n      </ul>\r\n      <div className='cart_amount mb20px'>\r\n        <span>Total price: {amount}$</span>\r\n      </div>\r\n      {orderForm \r\n        ? <div className='form_fix mb20px'><Form btnName='Confirm' makeOrder={true} order={order}/></div>\r\n        : <div className='cart_order'>\r\n            <button onClick={() => dispatch(openOrderForm())} className='b_r10px'>Order</button>\r\n          </div>\r\n      }\r\n    </>\r\n  )\r\n  return(\r\n    <MainWr>\r\n      {orderSuccess ? <div className='success_order_wr window_h'><SuccessModal/></div> \r\n        : cart.length > 0 \r\n        ? cartList \r\n        : <p className='align_box window_h cart_empty'>Empty cart\r\n          </p>}\r\n    </MainWr>\r\n  )\r\n}\r\n\r\nexport default Cart","import React from \"react\"\r\n\r\nconst MainWr = ({children}) => {\r\n  return(\r\n    <main className='pt100px'>\r\n      {children}\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default MainWr","import React from \"react\";\r\nimport \"./Btn.scss\";\r\n\r\nconst Btn = ({ content, disable }) => {\r\n  return (\r\n    <button className={disable ? \"btn b_r10px btn_disable\" : \"btn b_r10px\"}>\r\n      {content}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Btn;\r\n"],"sourceRoot":""}