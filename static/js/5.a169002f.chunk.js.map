{"version":3,"sources":["components/Modal/SuccessModal.js","hooks/useInput.js","components/Modal/Form.js","components/Modal/OutModal.js","components/Modal/CallBackModal.js"],"names":["SuccessModal","successModal","useSelector","state","modal","dispatch","useDispatch","className","onClick","closeOutModal","closeSuccessModal","closeOrderSuccess","useInput","checkInput","useState","input","setInput","touched","setTouched","inputValid","inputInvalid","inputClasses","reset","Form","btnName","makeOrder","order","value","trim","name","setName","setNameTouched","nameClasses","nameValid","nameInvalid","resetName","test","phone","setPhone","setPhoneTouched","phoneClasses","phoneValid","phoneInvalid","resetPhone","formValid","onSubmit","e","preventDefault","console","log","JSON","stringify","closeOrderForm","openOrderSuccess","refreshDrinks","refreshPizza","refreshPromo","closeCallBackModal","openSuccessModal","autoComplete","id","type","onChange","target","onBlur","placeholder","maxLength","disabled","OutModal","memo","CallBackModal","outModal","callBackModal"],"mappings":"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","file":"static/js/5.a169002f.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useDispatch } from 'react-redux'\r\nimport { closeOutModal, closeSuccessModal } from '../../store/reducers/Modal'\r\nimport { closeOrderSuccess } from '../../store/reducers/Order'\r\nimport './SuccessModal.scss'\r\n\r\nconst SuccessModal = () => {\r\n  const successModal = useSelector(state => state.modal.successModal)\r\n  const dispatch = useDispatch()\r\n\r\n  const closeSuccess = () => {\r\n    dispatch(closeOutModal())\r\n    dispatch(closeSuccessModal())\r\n    dispatch(closeOrderSuccess())\r\n  }\r\n\r\n  return(\r\n    <div className={successModal ? 'success_modal effect' : 'success_modal'}>\r\n      <p>Operator will callback for 1 minute</p>\r\n      <button className='btn' onClick={closeSuccess}>Ok</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SuccessModal","import { useState } from \"react\";\r\n\r\nconst useInput = (checkInput) => {\r\n  const [input, setInput] = useState(\"\");\r\n  const [touched, setTouched] = useState(false);\r\n\r\n  const inputValid = checkInput(input)\r\n  const inputInvalid = !inputValid && touched;\r\n\r\n  const inputClasses = inputInvalid\r\n  ? \"form-control invalid\"\r\n  : \"form-control\";\r\n\r\n  const reset = () => {\r\n    setInput('');\r\n    setTouched(false);\r\n  };\r\n  return{\r\n    input,\r\n    setInput,\r\n    setTouched,\r\n    inputClasses,\r\n    inputValid,\r\n    inputInvalid,\r\n    reset\r\n  }\r\n}\r\n\r\nexport default useInput","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport useInput from \"../../hooks/useInput\";\r\nimport { refreshDrinks } from \"../../store/reducers/Drinks\";\r\nimport { closeCallBackModal, openSuccessModal } from \"../../store/reducers/Modal\";\r\nimport { closeOrderForm, openOrderSuccess } from \"../../store/reducers/Order\";\r\nimport { refreshPizza } from \"../../store/reducers/Pizza\";\r\nimport { refreshPromo } from \"../../store/reducers/Promo\";\r\nimport \"./Form.scss\";\r\n\r\nconst Form = ({btnName, makeOrder, order}) => {\r\n  const dispatch = useDispatch();\r\n  const openSuccess = () => {\r\n    dispatch(closeCallBackModal())\r\n    dispatch(openSuccessModal())\r\n  }\r\n  const {\r\n    input: name,\r\n    setInput: setName,\r\n    setTouched: setNameTouched,\r\n    inputClasses: nameClasses,\r\n    inputValid: nameValid,\r\n    inputInvalid: nameInvalid,\r\n    reset: resetName,\r\n  } = useInput((value) => value.trim() !== \"\");\r\n\r\n  const {\r\n    input: phone,\r\n    setInput: setPhone,\r\n    setTouched: setPhoneTouched,\r\n    inputClasses: phoneClasses,\r\n    inputValid: phoneValid,\r\n    inputInvalid: phoneInvalid,\r\n    reset: resetPhone,\r\n  } = useInput((value) => /[3][8][0][0-9]{9}/.test(value));\r\n\r\n  let formValid = false;\r\n\r\n  if (nameValid && phoneValid) {\r\n    formValid = true;\r\n  }\r\n\r\n  const sendData = (e) => {\r\n    e.preventDefault();\r\n    setNameTouched(true);\r\n    setPhoneTouched(true);\r\n\r\n    if(makeOrder) {\r\n      console.log(`name: ${name},phone: ${phone}, order:${JSON.stringify(order)}`);\r\n      resetName();\r\n      resetPhone();\r\n      dispatch(closeOrderForm())\r\n      dispatch(openOrderSuccess())\r\n      dispatch(refreshDrinks())\r\n      dispatch(refreshPizza())\r\n      dispatch(refreshPromo())\r\n      return\r\n    }\r\n    console.log(name, phone)\r\n    resetName();\r\n    resetPhone();\r\n    openSuccess()\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={sendData} autoComplete=\"off\" className=\"form\">\r\n        <div className={nameClasses}>\r\n          <input\r\n            className=\"name\"\r\n            id=\"name\"\r\n            type=\"text\"\r\n            onChange={(e) => setName(e.target.value)}\r\n            onBlur={() => setNameTouched(true)}\r\n            value={name}\r\n            placeholder={nameInvalid ? \"Incorect name\" : \"Name\"}\r\n            maxLength='20'\r\n          />\r\n        </div>\r\n        <div className={phoneClasses}>\r\n          <input\r\n            className=\"phone\"\r\n            id=\"phone\"\r\n            type=\"text\"\r\n            onChange={(e) => setPhone(e.target.value)}\r\n            onBlur={() => setPhoneTouched(true)}\r\n            value={phone}\r\n            placeholder={phoneInvalid ? \"Incorect phone\" : \"Phone\"}\r\n            maxLength='12'\r\n          />\r\n        </div>\r\n        <button \r\n          className={formValid ? \"btn\" : \"btn_dis\"} \r\n          disabled={!formValid}\r\n          type='submit'>\r\n          {btnName}\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React, { memo } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { closeCallBackModal, closeOutModal, closeSuccessModal } from \"../../store/reducers/Modal\";\r\nimport \"./OutModal.scss\";\r\n\r\nconst OutModal = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const close = () => {\r\n    dispatch(closeOutModal());\r\n    dispatch(closeCallBackModal());\r\n    dispatch(closeSuccessModal())\r\n  };\r\n\r\n  return <div onClick={close} className=\"back_modal\"></div>;\r\n};\r\n\r\nexport default memo(OutModal)\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport OutModal from './OutModal'\r\nimport Form from './Form'\r\nimport SuccessModal from './SuccessModal'\r\n\r\nconst CallBackModal = () =>  {\r\n  const {outModal, callBackModal, successModal} = useSelector(state => state.modal)\r\n  return(\r\n    <>\r\n      {outModal && <OutModal/>}\r\n      {callBackModal && <div className='modal_align_wr'><Form btnName='Call me'/></div>}\r\n      {successModal && <div className='fix_success' ><SuccessModal/></div>}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CallBackModal"],"sourceRoot":""}